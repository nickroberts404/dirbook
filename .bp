
# Setting PATH for Python 3.5
# The orginal version is saved in .bash_profile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.5/bin:${PATH}"
export PATH

#
# Aliases
#

alias sub='sublime .'
alias bashprofile='sublime ~/.bash_profile'
alias re-source='source ~/.bash_profile'

alias rmDS='find . -name ".DS_Store" -type f -delete'

# Directory Aliases
alias ..='cd ..'
alias projects='cd /Users/nickroberts404/Development/Projects'
alias playground='cd /Users/nickroberts404/Development/Playground'
alias learning='cd /Users/nickroberts404/Development/Learning'
alias orion='cd /Users/nickroberts404/Development/Projects/Orion'
alias telescope='cd /Users/nickroberts404/Development/Projects/Telescope'
alias temprd='cd /Users/nickroberts404/Development/Projects/tempr'
alias starfind='cd /Users/nickroberts404/Development/Projects/Starfind'
alias writing='cd /Users/nickroberts404/Writing'
alias mapbox-play='cd /Users/nickroberts404/Development/Playground/mapping/mapbox'

# This function will create a directory and then enter it.
function mkd() {
	mkdir -p "$1"; cd "$1";
}

# This function will step out of the current directory, and then delete it. BE CAREFUL
function rmcd() {
	DIRNOW="$PWD" # Stores the current directory path
	..; rm -r $DIRNOW # Steps back into the parent directory, and removes stored directory
}

# Git Aliases
alias gits='git status'
# This function will create a git repo out of an existing project.
function exist-git() {
	RESULT=${PWD##*/} # Finds the name of the directory, just the name
	git init; # Initializes a new repo
	echo "# $RESULT" >> README.md; # Initializes a readme
	git add .; # Adds entire directory to stage
	git commit -m "Created repo from existing project"; # Commits changes to stage
	git remote add origin "$1"; # Takes the git URI of the github project as an argument, sets it up as a remote
	git push -u origin master; # Pushes chnages to master, -u sets this as upstream
}
function gitcp() {
	git add .;
	git commit -m "$1";
	git push;
}
function gitc() {
	git add .;
	git commit -m "$1";
}

# Development

alias gulpd='gulp development'
alias gulpp='gulp production'

function npmd() {
	npm install "$1" --save-dev;
}
function npms() {
	npm install "$1" --save;
}
function npmg() {
	sudo npm install "$1" -g;
}

#!/bin/bash
#
# Open new Terminal tabs from the command line
#
# Author: Justin Hileman (http://justinhileman.com)
#
# Installation:
#     Add the following function to your `.bashrc` or `.bash_profile`,
#     or save it somewhere (e.g. `~/.tab.bash`) and source it in `.bashrc`
#
# Usage:
#     tab                   Opens the current directory in a new tab
#     tab [PATH]            Open PATH in a new tab
#     tab [CMD]             Open a new tab and execute CMD
#     tab [PATH] [CMD] ...  You can prob'ly guess

# Only for teh Mac users
[ `uname -s` != "Darwin" ] && return

function tab () {
    local cdto="$PWD"
    local args="$@"

    if [ -d "$1" ]; then
        cdto=`cd "$1"; pwd`
        args="${@:2}"
    fi

    osascript &>/dev/null <<EOF
        tell application "System Events"
            tell process "Terminal" to keystroke "t" using command down
        end tell
        tell application "Terminal"
            activate
            do script with command "cd \"$cdto\"; $args" in selected tab of the front window
        end tell
EOF
}


export NVM_DIR="/Users/nickroberts404/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# Dirbook Aliases (don't touch)
